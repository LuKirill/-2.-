"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
import re


def integer():
    act = act_("Введите операцию (+, -, *, / или 0 для выхода): ")
    num1 = int(num("Введите первое число: "))
    num2 = int(num("Введите второе число: "))
    if act == "+":
        return num1 + num2
    elif act == "-":
        return num1 - num2
    elif act == "*":
        return num1 * num2
    elif act == "/":
        if num2 == 0:
            print("на 0 делить нельзя")
            return integer()
        else:
            return num1 / num2

    return integer()


def num(n):
    num_ = input(n)
    if not num_.isdigit():
        print("Вы вместо числа ввели строку")
        return num(n)
    return num_


def act_(a):
    act = input(a)
    if act == '0':
        exit()
    actre = re.fullmatch(r'[0+/*-]', act)
    if not actre:
        print("Вы ввели не верный знак")
        return act_(a)
    else:
        return act


print(integer())
